name: Setup template

on:
  push:
  workflow_dispatch:

jobs:
  template:
    name: Prepare repository
    runs-on: ubuntu-latest
    if: github.repository != 'mcbeet/bolt-library-starter'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Initialize
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPOSITORY: ${{ github.repository }}
          README: |
            # MCGame

            [![GitHub Actions](https://github.com/Kzi368/MCGame/workflows/CI/badge.svg)](https://github.com/Kzi368/MCGame/actions)

            > A Minecraft game framework.

            ## Installation

            ```bash
            pip install mcgame
            ```

            ---

            License - [MIT](https://github.com/Kzi368/MCGame/blob/main/LICENSE)
        run: |
          set -e

          package_name=$(basename "$PWD" | sed "s/[^a-zA-Z0-9]/_/g" | tr '[:upper:]' '[:lower:]')
          repo=$(gh api "/repos/$GH_REPOSITORY")

          mv mcgame "$package_name"
          echo "$README" > README.md
          sed -i 's/version = ".*"/version = "0.0.1"/' pyproject.toml
          sed -i 's/__version__ = ".*"/__version__ = "0.0.1"/' "$package_name/__init__.py"
          rm CHANGELOG.md
          rm .github/workflows/template.yml

          files=$(find * -type f)
          sed -i "s|Kzi368|$(git show -s --format=%an)|g" $files
          sed -i "s|casiel.joshua@gmail.com|$(git show -s --format=%ae)|g" $files
          sed -i "s|MCGame|$(echo "$repo" | jq -r .name)|g" $files
          sed -i "s|A Minecraft game framework.|$(echo "$repo" | jq -r '.description // ""')|g" $files
          sed -i "s|https://github.com/Kzi368/MCGame|$(echo "$repo" | jq -r .html_url)|g" $files
          sed -i "s|mcgame|$package_name|g" $files

          git config --global user.name "$(git show -s --format=%an)"
          git config --global user.email "$(git show -s --format=%ae)"
          git add -A
          git commit --amend -m "chore: setup project from template"
          git push -f origin main

          for i in {1..5}; do
            for id in $(gh api "/repos/$GH_REPOSITORY/actions/workflows/main.yml/runs?status=in_progress" | jq -r '.workflow_runs[].id'); do
              gh api -XPOST "/repos/$GH_REPOSITORY/actions/runs/$id/cancel"
              gh api -XPOST "/repos/$GH_REPOSITORY/actions/workflows/main.yml/dispatches" -f ref=main
              exit 0
            done
            sleep 5
          done
